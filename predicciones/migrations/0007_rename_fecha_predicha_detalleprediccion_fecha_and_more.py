# Generated by Django 5.1.4 on 2025-08-19 22:05

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('predicciones', '0006_remove_configuracionmodelo_horizonte_cv_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='detalleprediccion',
            old_name='fecha_predicha',
            new_name='fecha',
        ),
        migrations.RenameField(
            model_name='prediccion',
            old_name='fecha_fin_predicha',
            new_name='fecha_fin',
        ),
        migrations.RenameField(
            model_name='prediccion',
            old_name='fecha_inicio_predicha',
            new_name='fecha_inicio',
        ),
        migrations.RenameField(
            model_name='prediccion',
            old_name='resultado_prediccion',
            new_name='resultado',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='capacidad_maxima',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='capacidad_minima',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='changepoint_prior_scale',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='changepoints',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='estacionalidad_modo',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='estacionalidades_personalizadas',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='eventos_especiales',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='frecuencia_datos',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='holidays_prior_scale',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='incluir_incertidumbre_estacionalidad',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='incluir_incertidumbre_tendencia',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='intervalo_confianza',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='modo_crecimiento',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='n_changepoints',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='nombre_config',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='regresores_adicionales',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='seasonality_prior_scale',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='tipo_dataset',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='usar_est_anual',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='usar_est_diaria',
        ),
        migrations.RemoveField(
            model_name='configuracionmodelo',
            name='usar_est_semanal',
        ),
        migrations.RemoveField(
            model_name='prediccion',
            name='fecha_prediccion',
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='cambios',
            field=models.JSONField(default=list, help_text='Lista personalizada de puntos de cambio'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='cap_max',
            field=models.FloatField(blank=True, help_text='Capacidad máxima (obligatorio si crecimiento = logístico).', null=True),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='cap_min',
            field=models.FloatField(blank=True, help_text='Capacidad mínima opcional en crecimiento logístico.', null=True),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='crecimiento',
            field=models.CharField(choices=[('linear', 'Linear'), ('logistic', 'Logístico')], default='linear', help_text='Tipo de crecimiento de la tendencia.', max_length=10),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='dataset',
            field=models.CharField(choices=[('normal', 'Normal'), ('pocos', 'Pocos Datos'), ('muchos', 'Muchos Datos'), ('ruidosos', 'Datos Ruidosos'), ('huecos', 'Datos con Huecos')], default='normal', help_text='Tipo de dataset con el que trabajará el modelo.', max_length=20),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='est_anual',
            field=models.BooleanField(default=True, help_text='Indica si se usará estacionalidad anual.'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='est_diaria',
            field=models.BooleanField(default=False, help_text='Indica si se usará estacionalidad diaria.'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='est_semanal',
            field=models.BooleanField(default=True, help_text='Indica si se usará estacionalidad semanal.'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='estacionalidades_extra',
            field=models.JSONField(default=list, help_text='Definición de estacionalidades adicionales.'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='eventos',
            field=models.JSONField(default=list, help_text='Lista de eventos especiales definidos'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='frecuencia',
            field=models.CharField(choices=[('D', 'Diaria'), ('W', 'Semanal'), ('M', 'Mensual')], default='D', help_text='Frecuencia de los datos de entrada', max_length=10),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='inc_estacionalidad',
            field=models.BooleanField(default=True, help_text='Indica si se incluirá incertidumbre en la estacionalidad.'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='inc_tendencia',
            field=models.BooleanField(default=True, help_text='Indica si se incluirá incertidumbre en la tendencia.'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='int_confianza',
            field=models.FloatField(default=0.8, help_text='Intervalo de confianza (0 a 1).'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='modo_est',
            field=models.CharField(choices=[('additive', 'Aditiva'), ('multiplicative', 'Multiplicativa')], default='additive', help_text='Tipo de estacionalidad (aditiva o multiplicativa).', max_length=15),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='n_cambios',
            field=models.IntegerField(default=25, help_text='Número de posibles puntos de cambio'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='nombre',
            field=models.CharField(default=django.utils.timezone.now, help_text='Nombre identificador de la configuración.', max_length=100, unique=True),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='regresores',
            field=models.JSONField(default=list, help_text='Regresores externos adicionales.'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='scale_cambio',
            field=models.FloatField(default=0.05, help_text='Flexibilidad en cambio de tendencia'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='scale_est',
            field=models.FloatField(default=10.0, help_text='Peso de la estacionalidad.'),
        ),
        migrations.AddField(
            model_name='configuracionmodelo',
            name='scale_feriados',
            field=models.FloatField(default=10.0, help_text='Peso de los feriados/eventos especiales.'),
        ),
        migrations.AlterField(
            model_name='configuracionmodelo',
            name='descripcion',
            field=models.TextField(blank=True, help_text='Descripción de la configuración.', null=True),
        ),
        migrations.AlterField(
            model_name='configuracionmodelo',
            name='estado',
            field=models.BooleanField(default=True, help_text='Indica si la configuración está activa.'),
        ),
        migrations.AlterField(
            model_name='configuracionmodelo',
            name='fourier_anual',
            field=models.IntegerField(default=10, help_text='Número de complejidad de Fourier para la estacionalidad anual.'),
        ),
        migrations.AlterField(
            model_name='configuracionmodelo',
            name='fourier_diaria',
            field=models.IntegerField(blank=True, help_text='Número de complejidad de Fourier para la estacionalidad diaria.', null=True),
        ),
        migrations.AlterField(
            model_name='configuracionmodelo',
            name='fourier_semanal',
            field=models.IntegerField(default=3, help_text='Número de complejidad de Fourier para la estacionalidad semanal.'),
        ),
        migrations.AlterField(
            model_name='configuracionmodelo',
            name='usar_feriados',
            field=models.BooleanField(default=False, help_text='Indica si se usará feriados/eventos especiales.'),
        ),
    ]
